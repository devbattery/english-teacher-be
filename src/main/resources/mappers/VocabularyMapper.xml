<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.devbattery.englishteacher.vocabulary.infra.persistence.mybatis.VocabularyMapper">

    <resultMap id="UserVocabularyResultMap"
               type="com.devbattery.englishteacher.vocabulary.domain.entity.UserVocabulary">
        <id property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="englishExpression" column="english_expression"/>
        <result property="koreanMeaning" column="korean_meaning"/>
        <result property="createdAt" column="created_at"/>
        <result property="isMemorized" column="is_memorized"/>
    </resultMap>

    <select id="findByIdAndUserId" parameterType="map" resultMap="UserVocabularyResultMap">
        SELECT id,
               user_id,
               english_expression,
               korean_meaning,
               created_at,
               is_memorized
        FROM USER_VOCABULARY
        WHERE id = #{id}
          AND user_id = #{userId}
    </select>

    <insert id="save" parameterType="com.devbattery.englishteacher.vocabulary.domain.entity.UserVocabulary"
            useGeneratedKeys="true" keyProperty="id">
        INSERT INTO USER_VOCABULARY (user_id, english_expression, korean_meaning, is_memorized)
        VALUES (#{userId}, #{englishExpression}, #{koreanMeaning}, #{isMemorized})
    </insert>

    <update id="updateMemorizedStatus"
            parameterType="com.devbattery.englishteacher.vocabulary.domain.entity.UserVocabulary">
        UPDATE USER_VOCABULARY
        SET is_memorized = #{isMemorized}
        WHERE id = #{id}
          AND user_id = #{userId}
    </update>

    <select id="existsByIdAndUserId" parameterType="map" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM USER_VOCABULARY
        WHERE id = #{id}
          AND user_id = #{userId}
    </select>

    <delete id="deleteById" parameterType="long">
        DELETE
        FROM USER_VOCABULARY
        WHERE id = #{id}
    </delete>

    <select id="findPaginatedByUserIdAndSearchTerm" resultMap="UserVocabularyResultMap">
        SELECT id, user_id, english_expression, korean_meaning, created_at, is_memorized
        FROM USER_VOCABULARY
        WHERE user_id = #{userId}
        <if test="searchTerm != null and searchTerm != ''">
            AND (english_expression LIKE CONCAT('%', #{searchTerm}, '%') OR korean_meaning LIKE CONCAT('%',
            #{searchTerm}, '%'))
        </if>
        ORDER BY created_at DESC
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <select id="countByUserIdAndSearchTerm" resultType="long">
        SELECT COUNT(*)
        FROM USER_VOCABULARY
        WHERE user_id = #{userId}
        <if test="searchTerm != null and searchTerm != ''">
            AND (english_expression LIKE CONCAT('%', #{searchTerm}, '%') OR korean_meaning LIKE CONCAT('%',
            #{searchTerm}, '%'))
        </if>
    </select>

</mapper>